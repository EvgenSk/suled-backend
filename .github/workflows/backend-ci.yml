name: Backend CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'src/**'
      - 'infra/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'src/**'
      - 'infra/**'

env:
  DOTNET_VERSION: '8.0.x'
  AZURE_FUNCTIONAPP_NAME: 'suled-functions'  # Update with your Function App name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './src/SuledFunctions'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Run tests
      run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage"

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: success()
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: '**/coverage.cobertura.xml'
        fail_ci_if_error: false

    - name: Publish Azure Functions
      run: dotnet publish ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }} --configuration Release --output ./publish

    - name: Upload artifact for deployment
      if: github.ref == 'refs/heads/master'
      uses: actions/upload-artifact@v4
      with:
        name: azure-functions
        path: ./publish

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: false  # Disable auto-deploy to dev for now
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-function.outputs.webapp-url }}

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: azure-functions

    - name: Deploy to Azure Functions (Dev)
      id: deploy-to-function
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}-dev
        package: '.'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE_DEV }}

  deploy-prod:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-function.outputs.webapp-url }}

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: azure-functions

    - name: Deploy to Azure Functions (Prod)
      id: deploy-to-function
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '.'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

  infrastructure:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Bicep
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: ./infra/main.bicep
        parameters: ./infra/main.bicepparam
        failOnStdErr: false
